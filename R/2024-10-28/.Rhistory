rm(list = ls())
gc()
# load data ------------
tuesdata <- tidytuesdayR::tt_load('2024-10-29')
monster_movie_genres <- tuesdata$monster_movie_genres
monster_movies <- tuesdata$monster_movies
View(monster_movie_genres)
View(monster_movies)
View(monster_movies)
View(monster_movie_genres)
gg_record(dir = "tidytuesday-temp", device = "png", width = 11, height = 8, units = "in", dpi = 320)
# plot ---------
library(tidyverse)
library(camcorder)
install.packages("camcorder")
gg_record(dir = "tidytuesday-temp", device = "png", width = 11, height = 8, units = "in", dpi = 320)
holiday_movies <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-12-12/holiday_movies.csv')
holiday_genres <- holiday_movies %>%
mutate(genres_list = as.list(str_split(genres, ","))) %>%
unnest(genres_list) %>%
mutate(decade = year %/% 10 * 10) %>%
group_by(decade) %>%
mutate(n_year = n_distinct(tconst)) %>%
ungroup() %>%
group_by(decade, genres_list) %>%
reframe(
n = n(),
pct = n / n_year * 100
) %>%
distinct() %>%
mutate(genres_list = fct_reorder(genres_list, -pct))
View(holiday_genres)
View(holiday_movies)
View(holiday_genres)
View(monster_movie_genres)
View(monster_movies)
library(stingr)
library(stringr)
df <- monster_movies$genres |>
str_split("\\,")
View(df)
df <- monster_movies
df$genres <- monster_movies$genres |>
str_split("\\,")
View(df)
# plot ---------
holiday_movies <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-12-12/holiday_movies.csv')
View(holiday_movies)
View(holiday_genres)
holiday_movies %>%
mutate(genres_list = as.list(str_split(genres, ",")))
holiday_genres <- holiday_movies %>%
mutate(genres_list = as.list(str_split(genres, ","))) %>%
unnest(genres_list) %>%
mutate(decade = year %/% 10 * 10) %>%
group_by(decade) %>%
mutate(n_year = n_distinct(tconst)) %>%
ungroup() %>%
group_by(decade, genres_list) %>%
reframe(
n = n(),
pct = n / n_year * 100
) %>%
distinct() %>%
mutate(genres_list = fct_reorder(genres_list, -pct))
View(holiday_genres)
# plot ---------
holiday_movies <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-12-12/holiday_movies.csv')
View(holiday_movies)
View(holiday_genres)
holiday_genres <- holiday_movies %>%
mutate(genres_list = as.list(str_split(genres, ","))) %>%
unnest(genres_list) %>%
mutate(decade = year %/% 10 * 10) %>%
group_by(decade) %>%
mutate(n_year = n_distinct(tconst)) %>%
ungroup() %>%
group_by(decade, genres_list) %>%
reframe(
n = n(),
pct = n / n_year * 100
) %>%
distinct() %>%
mutate(genres_list = fct_reorder(genres_list, -pct))
View(holiday_genres)
View(monster_movie_genres)
# plot ---------
holiday_movies <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-12-12/holiday_movies.csv')
View(holiday_genres)
View(monster_movie_genres)
# plot ---------
library(tidyverse)
library(janitor)
imdb_ratings <- readr::read_tsv(
"https://datasets.imdbws.com/title.ratings.tsv.gz",
na = c("", "NA", "\\N")
) |>
janitor::clean_names() |>
dplyr::filter(num_votes >= 10)
imdb_titles <- readr::read_tsv(
"https://datasets.imdbws.com/title.basics.tsv.gz",
na = c("", "NA", "\\N")
) |>
janitor::clean_names() |>
# A handful of titles have miscoded data, which can be detected by cases where
# the "isAdult" field has a value other than 0 or 1. That's convenient,
# because I want to get rid of anything other than 0.
dplyr::filter(is_adult == 0) |>
dplyr::select(-is_adult) |>
dplyr::mutate(
# Create a column for easier title searching.
simple_title = tolower(primary_title) |>
stringr::str_remove_all("[[:punct:]]")
)
rated_titles <- imdb_titles |>
dplyr::inner_join(imdb_ratings, by = "tconst")
monster_movies <- rated_titles |>
dplyr::filter(title_type %in% c("movie", "video", "tvMovie")) |>
# "end_year" is only relevant for series.
dplyr::select(-"end_year") |>
dplyr::rename("year" = "start_year") |>
dplyr::filter(stringr::str_detect(simple_title, "monster")) |>
dplyr::mutate(
dplyr::across(
c("year", "runtime_minutes", "num_votes"),
as.integer
)
)
monster_movie_genres <- monster_movies |>
dplyr::select(tconst, genres) |>
tidyr::separate_longer_delim(genres, ",")
View(monster_movie_genres)
View(monster_movies)
rm(list = ls())
gc()
# load data ------------
tuesdata <- tidytuesdayR::tt_load('2024-10-29')
monster_movie_genres <- tuesdata$monster_movie_genres
monster_movies <- tuesdata$monster_movies
# Sample data for dt1
dt1 <- data.table(
id = c(1, 2, 3),
country = c("A", "B", "C"),
value1 = c(10, 20, 30)
)
library(data.table)
# Sample data for dt1
dt1 <- data.table(
id = c(1, 2, 3),
country = c("A", "B", "C"),
value1 = c(10, 20, 30)
)
# Sample data for dt2 with a new column to add to dt1
dt2 <- data.table(
id = c(1, 2, 3),
country = c("A", "B", "C"),
value2 = c(100, 200, 300)
)
# Join dt2 to dt1 by "id" and "country", and add the value2 column
dt1 <- merge(dt1, dt2[, .(id, country, value2)], by = c("id", "country"), all.x = TRUE)
View(dt1)
# Sample data for dt1
dt1 <- data.table(
id = c(1, 2, 3),
country = c("A", "B", "C"),
value1 = c(10, 20, 30)
)
# Sample data for dt2 with a new column to add to dt1
dt2 <- data.table(
id = c(1, 2, 3),
country = c("A", "B", "C"),
value2 = c(100, 200, 300)
)
View(dt1)
View(dt2)
# Join dt2 to dt1 by "id" and "country", and add the value2 column
dt1 <- merge(dt1, dt2[, .(id, country, value2)], by = c("id", "country"), all.x = TRUE)
View(dt2)
View(monster_movies)
# Join dt2 to dt1 by "id" and "country", and add the value2 column
dt1 <- merge(monster_movie_genres, monster_movies[, .("tconst", "year")], by = c("tconst", "year"), all.x = TRUE)
library(data.table)
# Join dt2 to dt1 by "id" and "country", and add the value2 column
dt1 <- merge(monster_movie_genres, monster_movies[, .(tconst, year)], by = c("tconst", "year"), all.x = TRUE)
?merge
monster_movies[, .(tconst, year)
# Join dt2 to dt1 by "id" and "country", and add the value2 column
dt1 <- merge(monster_movie_genres, monster_movies[, .(tconst, year)], by = c("tconst", "year"), all.x = TRUE)
monster_movies[, .(tconst, year)]
monster_movies[, c("tconst", "year")]
# Join dt2 to dt1 by "id" and "country", and add the value2 column
dt1 <- merge(monster_movie_genres, monster_movies[, c("tconst", "year")], by = c("tconst", "year"), all.x = TRUE)
# Join dt2 to dt1 by "id" and "country", and add the value2 column
dt1 <- merge(monster_movie_genres, monster_movies[, c("tconst", "year")], by = c("tconst"), all.x = TRUE)
View(dt1)
# Join dt2 to dt1 by "id" and "country", and add the value2 column
dt1 <- merge(monster_movie_genres, monster_movies[, c("tconst", "year")], by = c("tconst"))
View(dt1)
View(monster_movie_genres)
holiday_movies <- fread('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-12-12/holiday_movies.csv')
holiday_movie_genres <- fread('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-12-12/holiday_movie_genres.csv')
index = match(holiday_movie_genres$tconst, holiday_movies$tconst)
holiday_movie_genres$year = holiday_movies[index]$year
View(holiday_movie_genres)
x = holiday_movie_genres[, by = .(year, genres), .N]
View(x)
x = x[which(year >= 1980 & !is.na(genres))]
x = x |>
dcast(year ~ genres, value.var = "N", fill = 0) |>
melt(id.vars = "year", variable.factor = FALSE, value.factor = FALSE, variable.name = "genres", value.name = "N")
x$label = ifelse(
x$genres %in% c("Drama", "Romance", "Comedy", "Family"),
x$genres, NA
)
my_font = "Jost"
rm(list = ls())
gc()
monster_movie_genres <- fread('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2024/2024-10-29/monster_movie_genres.csv')
monster_movies <- fread('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2024/2024-10-29/monster_movies.csv')
# Join dt2 to dt1 by "id" and "country", and add the value2 column
dt1 <- merge(monster_movie_genres, monster_movies[, c("tconst", "year")], by = c("tconst"))
View(dt1)
x <- dt1[, by = .(year, genres), .N]
View(x)
View(dt1)
setwd("D:/Users/nanastasiadou/Bioinfo/Projects/TidyTuesday/R/2024-10-28")
ggplot(x) +
geom_area(aes(x = year, y = N, fill = genres, color = genres, linetype = genres),
linewidth = .8, alpha = .5, position = "identity")
ggplot(x) +
geom_area(aes(x = year, y = N, fill = genres, color = genres, linetype = genres),
linewidth = .8, alpha = .5, position = "identity") +
scale_y_continuous(labels = scales::comma) +
# scale_x_continuous(expand = c(0, 0), breaks = seq(1923, 2023, by = 25), limits = c(1923, 2023)) +
scale_color_manual(values = c("#6A6599", "#BC3C29", "#DF8F44", "#79AF97", "#0072B5")) +
scale_fill_manual(values = c("#6A6599", "#BC3C29", "#DF8F44", "#79AF97", "#0072B5")) +
theme_minimal() +
theme(
plot.background = element_rect(fill = "#e4e4e3", color = NA),
legend.position = "right",
axis.title.y = element_text(margin = margin(r = 10)),
axis.title.x = element_text(margin = margin(t = 10)),
plot.margin = margin(20, 20, 20, 20)
)
ggplot(x) +
geom_area(aes(x = year, y = N, fill = genres, color = genres, linetype = genres),
linewidth = .8, alpha = .5, position = "identity") +
scale_y_continuous(labels = scales::comma) +
# scale_x_continuous(expand = c(0, 0), breaks = seq(1923, 2023, by = 25), limits = c(1923, 2023)) +
#
# scale_color_manual(values = c("#6A6599", "#BC3C29", "#DF8F44", "#79AF97", "#0072B5")) +
# scale_fill_manual(values = c("#6A6599", "#BC3C29", "#DF8F44", "#79AF97", "#0072B5")) +
#
theme_minimal() +
theme(
plot.background = element_rect(fill = "#e4e4e3", color = NA),
legend.position = "right",
axis.title.y = element_text(margin = margin(r = 10)),
axis.title.x = element_text(margin = margin(t = 10)),
plot.margin = margin(20, 20, 20, 20)
)
rm(list = ls())
gc()
ggplot(x) +
geom_area(aes(x = year, y = N, fill = genres, color = genres, linetype = genres),
linewidth = .4, alpha = .3, position = "identity") +
ggplot(x) +
geom_area(aes(x = year, y = N, fill = genres, color = genres, linetype = genres),
linewidth = .4, alpha = .3, position = "identity") +
scale_y_continuous(labels = scales::comma)
ggplot(x) +
geom_area(aes(x = year, y = N, fill = genres, color = genres, linetype = genres),
linewidth = .4, alpha = .3, position = "identity") +
scale_y_continuous(labels = scales::comma) +
scale_x_continuous(expand = c(0, 0), breaks = seq(2003, 2023, by = 4), limits = c(2003, 2023)) +
scale_color_manual(values = c("#80539a", "#2293ca", "#656566")) +
scale_fill_manual(values = c("#80539a", "#2293ca", "#656566")) +
theme_minimal()
monster_movie_genres <- fread('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2024/2024-10-29/monster_movie_genres.csv')
monster_movies <- fread('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2024/2024-10-29/monster_movies.csv')
# Join dt2 to dt1 by "id" and "country", and add the value2 column
dt1 <- merge(monster_movie_genres, monster_movies[, c("tconst", "year")], by = c("tconst"))
x <- dt1[, by = .(year, genres), .N]
ggplot(x) +
geom_area(aes(x = year, y = N, fill = genres, color = genres, linetype = genres),
linewidth = .4, alpha = .3, position = "identity") +
scale_y_continuous(labels = scales::comma) +
scale_x_continuous(expand = c(0, 0), breaks = seq(2003, 2023, by = 4), limits = c(2003, 2023)) +
scale_color_manual(values = c("#80539a", "#2293ca", "#656566")) +
scale_fill_manual(values = c("#80539a", "#2293ca", "#656566")) +
theme_minimal()
ggplot(x) +
geom_area(aes(x = year, y = N, fill = genres, color = genres, linetype = genres),
linewidth = .4, alpha = .3, position = "identity") +
scale_y_continuous(labels = scales::comma)
x <- x[, N > 9]
x <- x[, which(N > 9)]
x <- dt1[, by = .(year, genres), .N]
x <- x[, which(N > 9)]
index <- which(N > 5)
index <- which(x$N > 5)
x <- dt1[, by = .(year, genres), .N]
index <- which(x$N > 5)
x <- x[, index]
x <- x[index, ]
View(x)
ggplot(x) +
geom_area(aes(x = year, y = N, fill = genres, color = genres, linetype = genres),
linewidth = .8, alpha = .5, position = "identity") +
ggplot(x) +
geom_area(aes(x = year, y = N, fill = genres, color = genres, linetype = genres),
linewidth = .8, alpha = .5, position = "identity") +
scale_y_continuous(labels = scales::comma) +
# scale_x_continuous(expand = c(0, 0), breaks = seq(1923, 2023, by = 25), limits = c(1923, 2023)) +
#
# scale_color_manual(values = c("#6A6599", "#BC3C29", "#DF8F44", "#79AF97", "#0072B5")) +
# scale_fill_manual(values = c("#6A6599", "#BC3C29", "#DF8F44", "#79AF97", "#0072B5")) +
#
theme_minimal() +
theme(
plot.background = element_rect(fill = "#e4e4e3", color = NA),
legend.position = "right",
axis.title.y = element_text(margin = margin(r = 10)),
axis.title.x = element_text(margin = margin(t = 10)),
plot.margin = margin(20, 20, 20, 20)
)
ggplot(x) +
geom_area(aes(x = year, y = N, fill = genres, color = genres, linetype = genres),
linewidth = .8, alpha = .5, position = "identity")
ggplot(x, aes(x = year, y = N, fill = genres, label = genres)) +
geom_stream(bw = .85)
ggplot(x, aes(x = year, y = N, fill = genres, label = genres))
ggplot(x, aes(x = year, y = N, fill = genres, label = genres)) +
geom_stream(bw = .85)
library(ggplot2)
ggplot(x, aes(x = year, y = N, fill = genres, label = genres)) +
geom_stream(bw = .85)
library(ggstream)
ggplot(x, aes(x = year, y = N, fill = genres, label = genres)) +
geom_stream(bw = .85)
ggplot(x, aes(x = year, y = N, fill = genres, label = genres)) +
geom_stream(bw = .85) +
geom_stream_label(size = 4, color = gr2)
ggplot(x, aes(x = year, y = N, fill = genres, label = genres)) +
geom_stream(bw = .85) +
geom_stream_label(size = 4)
ggplot(x) +
geom_area(aes(x = year, y = N, fill = genres, color = genres, linetype = genres),
linewidth = .8, alpha = .5, position = "identity") +
ggplot(x) +
geom_area(aes(x = year, y = N, fill = genres, color = genres, linetype = genres),
linewidth = .8, alpha = .5, position = "identity")
ggplot(x) +
geom_area(aes(x = year, y = N, fill = genres, color = genres, linetype = genres),
linewidth = .8, alpha = .5, position = "identity")
?geom_area
ggplot(x) +
geom_area(aes(x = year, y = N, fill = genres, color = genres, linetype = genres),
linewidth = .8, alpha = .5)
ggplot(x, aes(x=year, y=N, fill=genres)) +
geom_area(alpha=0.6 , size=1, colour="black")
